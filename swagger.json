{
  "swagger": "2.0",
  "info": {
    "description": "Esta é uma simples documentação de exemplo usada no teste para vaga de desenvolvedor pleno na Alelo.",
    "version": "1.0.0",
    "title": "Swagger Consumer CardPat",
    "termsOfService": "http://alelo.com.br",
    "contact": {
      "email": "valdircezar312@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "localhost:8080",
  "tags": [
    {
      "name": "cards",
      "description": "Endpoints para card"
    },
    {
      "name": "consumers",
      "description": "Enpoints para consumer"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/cards/setCardbalance": {
      "post": {
        "tags": [
          "cards"
        ],
        "summary": "Set Card Balance",
        "description": "Adiciona saldo ao cartão",
        "operationId": "post",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "cardNumber",
            "in": "query",
            "type": "string",
            "required": true,
            "description": "Numero do cartão a ser creditado um valor"
          },
          {
            "name": "value",
            "in": "query",
            "type": "number",
            "required": true,
            "description": "Valor a ser creditado ao cartão"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/cards/buy": {
      "post": {
        "tags": [
          "cards"
        ],
        "summary": "Buy",
        "description": "Realizar compra",
        "operationId": "buy",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Realizar uma compra",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Purchase"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Inválid params"
          },
          "404": {
            "description": "Card not found"
          }
        }
      }
    },
    "/consumers/find/{id}": {
      "get": {
        "tags": [
          "consumers"
        ],
        "summary": "Busca consumer por id",
        "description": "Retorna um unico consumer",
        "operationId": "getConsumerById",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do consumer",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Consumer"
            }
          },
          "400": {
            "description": "ID inválido"
          },
          "404": {
            "description": "Consumer not found"
          }
        }
      }
    },
    "/consumers/list": {
      "get": {
        "tags": [
          "consumers"
        ],
        "summary": "Busca todos os consumer",
        "description": "Lista todos os consumers do banco",
        "operationId": "findAll",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Consumer"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/consumers/create": {
      "post": {
        "tags": [
          "consumers"
        ],
        "summary": "Create consumer",
        "description": "Criando um novo consumer",
        "operationId": "create",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Criar novo consumer",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Consumer"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/consumers/update/{id}": {
      "put": {
        "tags": [
          "consumers"
        ],
        "summary": "Update consumer",
        "description": "Atualiza um consumer",
        "operationId": "updateConsumer",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do consumer",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Um consumer deve ser passado como parametro",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Consumer"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "ID inválido"
          },
          "404": {
            "description": "Cosumer not found"
          }
        }
      }
    }
  },
  "definitions": {
    "Address": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "street": {
          "type": "string"
        },
        "number": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Address"
      }
    },
    "Card": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "cardNumber": {
          "type": "string"
        },
        "cardBalance": {
          "type": "number"
        },
        "cardType": {
          "type": "string",
          "description": "Card type",
          "enum": [
            "FOOD",
            "FUEL",
            "DRUG_STORE"
          ]
        }
      },
      "xml": {
        "name": "Card"
      }
    },
    "Contact": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "mobilePhoneNumber": {
          "type": "string"
        },
        "residencePhoneNumber": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Contact"
      }
    },
    "Consumer": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "documentNumber": {
          "type": "string"
        },
        "birthDate": {
          "type": "number"
        },
        "contact": {
          "$ref": "#/definitions/Contact"
        },
        "address": {
          "$ref": "#/definitions/Address"
        },
        "cards": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Card"
          }
        }
      },
      "xml": {
        "name": "Consumer"
      }
    },
    "Purchase": {
      "type": "object",
      "properties": {
        "establishmentType": {
          "type": "string",
          "enum": [
            "FOOD",
            "FUEL",
            "DRUG_STORE"
          ]
        },
        "establishmentName": {
          "type": "string"
        },
        "cardNumber": {
          "type": "string"
        },
        "productDescription": {
          "type": "string"
        },
        "value": {
          "type": "number"
        }
      },
      "xml": {
        "name": "Purchase"
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}